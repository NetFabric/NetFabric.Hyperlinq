name: .NET Core

on: [push]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos]

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101
    - name: Build solution
      run: dotnet build -c:Release
    - name: Tests
      run: dotnet test ./NetFabric.Hyperlinq.UnitTests/NetFabric.Hyperlinq.UnitTests.csproj -c:Release -f:netcoreapp3.0
          
  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101
    - name: Build solution
      run: dotnet build -c:Release
    - name: Tests with coverage
      run: dotnet test ./NetFabric.Hyperlinq.UnitTests/NetFabric.Hyperlinq.UnitTests.csproj -c:Release -p:CollectCoverage=true -p:Exclude="[xunit.*]*" -p:CoverletOutputFormat=cobertura -p:CoverletOutput="./Coverage/"
    - name: Setup report generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.4.1
    - name: Generate report
      run: reportgenerator -reports:./NetFabric.Hyperlinq.UnitTests/Coverage/coverage.netcoreapp3.0.cobertura.xml -targetdir:./NetFabric.Hyperlinq.UnitTests/Coverage/Reports
    - name: Publish report
      uses: 5monkeys/cobertura-action@v1
      with:
        path: ./NetFabric.Hyperlinq.UnitTests/Coverage/Reports
        repo_token: ${{ secrets.GITHUB_TOKEN }}  
      

      
    
